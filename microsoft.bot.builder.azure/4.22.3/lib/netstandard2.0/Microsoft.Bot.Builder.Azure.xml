<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Bot.Builder.Azure</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Bot.Builder.Azure.AzureBlobStorage">
            <summary>
            Implements <see cref="T:Microsoft.Bot.Builder.IStorage"/> using Azure Blob Storage.
            </summary>
            <remarks>
            This class uses a single Azure Storage Blob Container.
            Each entity or <see cref="T:Microsoft.Bot.Builder.IStoreItem"/> is serialized into a JSON string and stored in an individual text blob.
            Each blob is named after the store item key,  which is encoded so that it conforms a valid blob name.
            If an entity is an <see cref="T:Microsoft.Bot.Builder.IStoreItem"/>, the storage object will set the entity's <see cref="P:Microsoft.Bot.Builder.IStoreItem.ETag"/>
            property value to the blob's ETag upon read. Afterward, an <see cref="T:Microsoft.WindowsAzure.Storage.AccessCondition"/> with the ETag value
            will be generated during Write. New entities start with a null ETag.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Azure.AzureBlobStorage"/> class.
            </summary>
            <param name="storageAccount">Azure CloudStorageAccount instance.</param>
            <param name="containerName">Name of the Blob container where entities will be stored.</param>
            <param name="jsonSerializer">If passing in a custom JsonSerializer, we recommend the following settings:
            <para>jsonSerializer.TypeNameHandling = TypeNameHandling.All.</para>
            <para>jsonSerializer.NullValueHandling = NullValueHandling.Include.</para>
            <para>jsonSerializer.ContractResolver = new DefaultContractResolver().</para>
            </param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobStorage.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Azure.AzureBlobStorage"/> class.
            </summary>
            <param name="dataConnectionstring">Azure Storage connection string.</param>
            <param name="containerName">Name of the Blob container where entities will be stored.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Azure.AzureBlobStorage"/> class.
            </summary>
            <param name="storageAccount">Azure CloudStorageAccount instance.</param>
            <param name="containerName">Name of the Blob container where entities will be stored.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Azure.AzureBlobStorage"/> class.
            </summary>
            <param name="storageAccount">Azure CloudStorageAccount instance.</param>
            <param name="containerName">Name of the Blob container where entities will be stored.</param>
            <param name="blobClient">Custom implementation of CloudBlobClient.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobStorage.DeleteAsync(System.String[],System.Threading.CancellationToken)">
            <summary>
            Deletes entity blobs from the configured container.
            </summary>
            <param name="keys">An array of entity keys.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobStorage.ReadAsync(System.String[],System.Threading.CancellationToken)">
            <summary>
            Retrieve entities from the configured blob container.
            </summary>
            <param name="keys">An array of entity keys.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobStorage.WriteAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Stores a new entity in the configured blob container.
            </summary>
            <param name="changes">The changes to write to storage.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Azure.AzureBlobTranscriptStore">
            <summary>
            The blob transcript store stores transcripts in an Azure Blob container.
            </summary>
            <remarks>
            Each activity is stored as json blob in structure of
            container/{channelId]/{conversationId}/{Timestamp.ticks}-{activity.id}.json.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobTranscriptStore.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Azure.AzureBlobTranscriptStore"/> class.
            Creates an instance of AzureBlobTranscriptStore.
            </summary>
            <param name="dataConnectionstring">Connection string to connect to Azure Blob Storage.</param>
            <param name="containerName">Name of the container where transcript blobs will be stored.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobTranscriptStore.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Azure.AzureBlobTranscriptStore"/> class.
            </summary>
            <param name="storageAccount">Azure Storage Account to store transcripts.</param>
            <param name="containerName">Name of the container where transcript blobs will be stored.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobTranscriptStore.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Azure.AzureBlobTranscriptStore"/> class.
            Creates an instance of AzureBlobTranscriptStore.
            </summary>
            <param name="storageAccount">.</param>
            <param name="containerName">Name of the container where transcript blobs will be stored.</param>
            <param name="blobClient">Custom implementation of CloudBlobClient.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobTranscriptStore.LogActivityAsync(Microsoft.Bot.Schema.IActivity)">
            <summary>
            Log an activity to the transcript.
            </summary>
            <param name="activity">Activity being logged.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>A task that represents the work queued to execute.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobTranscriptStore.GetTranscriptActivitiesAsync(System.String,System.String,System.String,System.DateTimeOffset)">
            <summary>
            Get activities for a conversation (Aka the transcript).
            </summary>
            <param name="channelId">Channel Id.</param>
            <param name="conversationId">Conversation Id.</param>
            <param name="continuationToken">Continuatuation token to page through results.</param>
            <param name="startDate">Earliest time to include.</param>
            <returns>PagedResult of activities.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobTranscriptStore.ListTranscriptsAsync(System.String,System.String)">
            <summary>
            List conversations in the channelId.
            </summary>
            <param name="channelId">Channel Id.</param>
            <param name="continuationToken">Continuatuation token to page through results.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> A task that represents the work queued to execute.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.AzureBlobTranscriptStore.DeleteTranscriptAsync(System.String,System.String)">
            <summary>
            Delete a specific conversation and all of it's activities.
            </summary>
            <param name="channelId">Channel Id where conversation took place.</param>
            <param name="conversationId">Id of the conversation to delete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Azure.CosmosDbKeyEscape">
            <summary>
            Helper methods for escaping keys used for Cosmos DB.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Azure.CosmosDbKeyEscape.MaxKeyLength">
            <summary>
            Older libraries had a max key length of 255.
            The limit is now 1023. In this library, 255 remains the default for backwards compat.
            To override this behavior, and use the longer limit, set CosmosDbPartitionedStorageOptions.CompatibilityMode to false.
            https://docs.microsoft.com/en-us/azure/cosmos-db/concepts-limits#per-item-limits.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbKeyEscape.EscapeKey(System.String)">
            <summary>
            Converts the key into a DocumentID that can be used safely with Cosmos DB.
            The following characters are restricted and cannot be used in the Id property: '/', '\', '?', and '#'.
            More information at <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.documents.resource.id?view=azure-dotnet"/>.
            </summary>
            <param name="key">The key to escape.</param>
            <returns>An escaped key that can be used safely with CosmosDB.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbKeyEscape.EscapeKey(System.String,System.String,System.Boolean)">
            <summary>
            Converts the key into a DocumentID that can be used safely with Cosmos DB.
            The following characters are restricted and cannot be used in the Id property: '/', '\', '?', and '#'.
            More information at <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.documents.resource.id?view=azure-dotnet"/>.
            </summary>
            <param name="key">The key to escape.</param>
            <param name="suffix">The string to add at the end of all row keys.</param>
            <param name="compatibilityMode">True if running in compatability mode and keys should
            be truncated in order to support previous CosmosDb max key length of 255. 
            This behavior can be overridden by setting
            <see cref="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions.CompatibilityMode"/> to false.</param>
            <returns>An escaped key that can be used safely with CosmosDB.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage">
            <summary>
            Implements an CosmosDB based storage provider using partitioning for a bot.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.#ctor(Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage"/> class.
            using the provided CosmosDB credentials, database ID, and container ID.
            </summary>
            <param name="cosmosDbStorageOptions">Cosmos DB partitioned storage configuration options.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.#ctor(Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage"/> class.
            using the provided CosmosDB credentials, database ID, and collection ID.
            </summary>
            <param name="cosmosDbStorageOptions">Cosmos DB partitioned storage configuration options.</param>
            <param name="jsonSerializer">If passing in a custom JsonSerializer, we recommend the following settings:
            <para>jsonSerializer.TypeNameHandling = TypeNameHandling.All.</para>
            <para>jsonSerializer.NullValueHandling = NullValueHandling.Include.</para>
            <para>jsonSerializer.ContractResolver = new DefaultContractResolver().</para>
            <para>jsonSerializer.SerializationBinder = new AllowedTypesSerializationBinder().</para>
            </param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.#ctor(Microsoft.Azure.Cosmos.CosmosClient,Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage"/> class.
            using the provided CosmosDB credentials, database ID, and collection ID.
            </summary>
            <param name="client">The custom implementation of CosmosClient.</param>
            <param name="cosmosDbStorageOptions">Cosmos DB partitioned storage configuration options.</param>
            <param name="jsonSerializer">If passing in a custom JsonSerializer, we recommend the following settings:
            <para>jsonSerializer.TypeNameHandling = TypeNameHandling.All.</para>
            <para>jsonSerializer.NullValueHandling = NullValueHandling.Include.</para>
            <para>jsonSerializer.ContractResolver = new DefaultContractResolver().</para>
            <para>jsonSerializer.SerializationBinder = new AllowedTypesSerializationBinder().</para>
            </param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.ReadAsync(System.String[],System.Threading.CancellationToken)">
            <summary>
            Reads one or more items with matching keys from the Cosmos DB container.
            </summary>
            <param name="keys">A collection of Ids for each item to be retrieved.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>A dictionary containing the retrieved items.</returns>
            <exception cref="T:System.ArgumentNullException">Exception thrown if the array of keys (Ids for the items to be retrieved) is null.</exception>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.WriteAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Inserts or updates one or more items into the Cosmos DB container. 
            </summary>
            <param name="changes">A dictionary of items to be inserted or updated. The dictionary item key
            is used as the ID for the inserted / updated item.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>A Task representing the work to be executed.</returns>
            <exception cref="T:System.ArgumentNullException">Exception thrown if the changes dictionary is null.</exception>
            <exception cref="T:System.Exception">Exception thrown is the etag is empty on any of the items within the changes dictionary.</exception>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.DeleteAsync(System.String[],System.Threading.CancellationToken)">
            <summary>
            Deletes one or more items from the Cosmos DB container.
            </summary>
            <param name="keys">An array of Ids for the items to be deleted.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/>.</param>
            <returns>A Task representing the work to be executed.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the array of Ids to be deleted is null.</exception>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.Dispose">
            <summary>
            Disposes the object instance and releases any related objects owned by the class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.Dispose(System.Boolean)">
            <summary>
            Disposes objects used by the class.
            </summary>
            <param name="disposing">A Boolean that indicates whether the method call comes from a Dispose method (its value is true) or from a finalizer (its value is false).</param>
            <remarks>
            The disposing parameter should be false when called from a finalizer, and true when called from the IDisposable.Dispose method.
            In other words, it is true when deterministically called and false when non-deterministically called.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.InitializeAsync">
            <summary>
            Connects to the CosmosDB database and creates / gets the container.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.CosmosJsonSerializer">
            <summary>
            Azure Cosmos DB does not expose a default implementation of CosmosSerializer that is required to set the custom JSON serializer settings.
            To fix this, we have to create our own implementation.
            <remarks>
            See: https://github.com/Azure/azure-cosmos-dotnet-v3/blob/master/Microsoft.Azure.Cosmos/src/Serializer/CosmosJsonDotNetSerializer.cs
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.CosmosJsonSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.CosmosJsonSerializer"/> class that uses the JSON.net serializer.
            </summary>
            <param name="jsonSerializerSettings">The JSON.net serializer.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.CosmosJsonSerializer.FromStream``1(System.IO.Stream)">
            <summary>
            Convert a Stream to the passed in type.
            </summary>
            <typeparam name="T">The type of object that should be deserialized.</typeparam>
            <param name="stream">An open stream that is readable that contains JSON.</param>
            <returns>The object representing the deserialized stream.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.CosmosJsonSerializer.ToStream``1(``0)">
            <summary>
            Converts an object to a open readable stream.
            </summary>
            <typeparam name="T">The type of object being serialized.</typeparam>
            <param name="input">The object to be serialized.</param>
            <returns>An open readable stream containing the JSON of the serialized object.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.CosmosJsonSerializer.GetSerializer">
            <summary>
            JsonSerializer has hit a race conditions with custom settings that cause null reference exception.
            To avoid the race condition a new JsonSerializer is created for each call.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.DocumentStoreItem">
            <summary>
            Internal data structure for storing items in a CosmosDB Collection.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.DocumentStoreItem.PartitionKeyPath">
            <summary>
            Gets the PartitionKey path to be used for this document type.
            </summary>
            <value>
            The PartitionKey path to be used for this document type.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.DocumentStoreItem.Id">
            <summary>
            Gets or sets the sanitized Id/Key used as PrimaryKey.
            </summary>
            <value>
            The sanitized Id/Key used as PrimaryKey.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.DocumentStoreItem.RealId">
            <summary>
            Gets or sets the un-sanitized Id/Key.
            </summary>
            <value>
            The un-sanitized Id/Key.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.DocumentStoreItem.Document">
            <summary>
            Gets or sets the persisted object.
            </summary>
            <value>
            The persisted object.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.DocumentStoreItem.ETag">
            <summary>
            Gets or sets the ETag information for handling optimistic concurrency updates.
            </summary>
            <value>
            The ETag information for handling optimistic concurrency updates.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorage.DocumentStoreItem.PartitionKey">
            <summary>
            Gets the PartitionKey value for the document.
            </summary>
            <value>
            The PartitionKey value for the document.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions">
            <summary>
            Cosmos DB Partitioned Storage Options.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions.CosmosDbEndpoint">
            <summary>
            Gets or sets the CosmosDB endpoint.
            </summary>
            <value>
            The CosmosDB endpoint.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions.AuthKey">
            <summary>
            Gets or sets the authentication key for Cosmos DB.
            </summary>
            <value>
            The authentication key for Cosmos DB.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions.DatabaseId">
            <summary>
            Gets or sets the database identifier for Cosmos DB instance.
            </summary>
            <value>
            The database identifier for Cosmos DB instance.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions.ContainerId">
            <summary>
            Gets or sets the container identifier.
            </summary>
            <value>
            The container identifier.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions.CosmosClientOptions">
            <summary>
            Gets or sets the options for the CosmosClient.
            </summary>
            <value>
            The options for use with the CosmosClient.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions.ContainerThroughput">
            <summary>
            Gets or sets the throughput set when creating the Container. Defaults to 400.
            </summary>
            <value>
            Container throughput. Defaults to 400.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions.KeySuffix">
            <summary>
            Gets or sets the suffix to be added to every key. <see cref="M:Microsoft.Bot.Builder.Azure.CosmosDbKeyEscape.EscapeKey(System.String)"/>.
            
            Note: <see cref="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions.CompatibilityMode"/> must be set to 'false' to use a KeySuffix.
            When KeySuffix is used, keys will NOT be truncated but an exception will be thrown if
            the key length is longer than allowed by CosmosDb.
            </summary>
            <value>
            String containing only valid CosmosDb key characters. (e.g. not: '\\', '?', '/', '#', '*').
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions.CompatibilityMode">
            <summary>
            Gets or sets a value indicating whether or not to run in Compatibility Mode.
            Early versions of CosmosDb had a key length limit of 255.  Keys longer than this were
            truncated in <see cref="T:Microsoft.Bot.Builder.Azure.CosmosDbKeyEscape"/>.  This remains the default behavior, but
            can be overridden by setting CompatibilityMode to false.  This setting will also allow
            for using older collections where no PartitionKey was specified.
            
            Note: CompatibilityMode cannot be 'true' if KeySuffix is used.
            </summary>
            <value>
            Currently, max key length for cosmosdb is 1023:
            https://docs.microsoft.com/en-us/azure/cosmos-db/concepts-limits#per-item-limits
            The default for backwards compatibility is 255 <see cref="F:Microsoft.Bot.Builder.Azure.CosmosDbKeyEscape.MaxKeyLength"/>.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Azure.CosmosDbPartitionedStorageOptions.TokenCredential">
            <summary>
            Gets or sets the token credential for Cosmos DB.
            </summary>
            <value>
            The token credential for Cosmos DB.
            </value>
        </member>
    </members>
</doc>
