<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Bot.Builder.Dialogs.Declarative</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Converters.InterfaceConverter`1.RegisterObserver(Microsoft.Bot.Builder.Dialogs.Declarative.Observers.IConverterObserver)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType">
            <summary>
            DeclarativeType object which is $kind => type.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType"/> class.
            </summary>
            <param name="kind">$kind.</param>
            <param name="type">type.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType.Kind">
            <summary>
            Gets or sets the declarative id for this type.
            </summary>
            <value>
            The declarative id for this type.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType.Type">
            <summary>
            Gets or sets the type for this registration.
            </summary>
            <value>
            The type for this registration.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType.CustomDeserializer">
            <summary>
            Gets or sets an optional custom deserializer for this type.
            </summary>
            <value>
            An optional custom deserializer for this type.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType`1">
            <summary>
            TypeRegistration of Kind => type using generic.
            </summary>
            <typeparam name="T">type.</typeparam>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.IComponentDeclarativeTypes">
            <summary>
            Interface for registering declarative kinds and jsonconverters to support them.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.IComponentDeclarativeTypes.GetDeclarativeTypes(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer)">
            <summary>
            Return an enumeration of KindRegistrations $kind => Type.
            </summary>
            <param name="resourceExplorer">resourceExplorer.</param>
            <returns>declarative type registration.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.IComponentDeclarativeTypes.GetConverters(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer,Microsoft.Bot.Builder.Dialogs.Debugging.SourceContext)">
            <summary>
            Return an enumeration of JsonConverters for supporting loading declarative types.
            </summary>
            <param name="resourceExplorer">resourceExplorer.</param>
            <param name="sourceContext">SourceContext to build debugger source map.</param>
            <returns>jsonsconverters.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.CycleDetectionObserver">
            <summary>
            <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.IConverterObserver"/> dedicated to find cycles and properly aid in the type-loading
            of cyclical graphs.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.CycleDetectionObserver.CycleDetectionPass">
            <summary>
            Gets or sets the current pass of the algorithm.
            </summary>
            <value>
            The current pass of the algorithm.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.CycleDetectionObserver.OnBeforeLoadToken``1(Newtonsoft.Json.Linq.JToken,``0@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.CycleDetectionObserver.OnAfterLoadToken``1(Newtonsoft.Json.Linq.JToken,``0,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.CycleDetectionPasses">
            <summary>
            Passes for the 2-pass cycle detection algorithm implemented in <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.CycleDetectionObserver"/>.
            This algorithm is used to detect cycles in Json type loading by the different converters registered
            by declarative components.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.CycleDetectionPasses.PassOne">
            <summary>
            First pass of the 2-pass cycle detection algorithm. 
            </summary>
            <remarks>
            The first pass builds all objects and caches them, but stops processing branches whenever it
            finds a cycle.
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.CycleDetectionPasses.PassTwo">
            <summary>
            Second pass of the 2-pass cycle detection algorithm.
            </summary>
            <remarks>
            The second pass takes all items from the cache, so there is no real serialization but 
            mostly stitching objects together from the cache.
            </remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.IConverterObserver">
            <summary>
            Observer for <see cref="T:Newtonsoft.Json.JsonConverter"/> instances. Handles notifications around the 
            object loading lifecycle, including the ability to intercept and provide alternate values
            to be considered by the converters.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.IConverterObserver.OnBeforeLoadToken``1(Newtonsoft.Json.Linq.JToken,``0@)">
            <summary>
            Notifies <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.IConverterObserver"/> instances before type-loading a <see cref="T:Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <typeparam name="T">Type of the concrete object to be built.</typeparam>
            <param name="token">Token to be used to build the object.</param>
            <param name="result">Output parameter for observer to provide its result to the converter.</param>
            <returns>True if the observer provides a result and False if not.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.IConverterObserver.OnAfterLoadToken``1(Newtonsoft.Json.Linq.JToken,``0,``0@)">
            <summary>
            Notifies <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.IConverterObserver"/> instances after type-loading a <see cref="T:Newtonsoft.Json.Linq.JToken"/> into the 
            provided instance of <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the concrete object that was built.</typeparam>
            <param name="token">Token used to build the object.</param>
            <param name="obj">Object that was built using the token.</param>
            <param name="result">Output parameter for observer to provide its result to the converter.</param>
            <returns>True if the observer provides a result and False if not.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.IObservableConverter">
            <summary>
            Marks a <see cref="T:Newtonsoft.Json.JsonConverter"/> that allows registrations of <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.IConverterObserver"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.IObservableConverter.RegisterObserver(Microsoft.Bot.Builder.Dialogs.Declarative.Observers.IConverterObserver)">
            <summary>
            Registers a <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Observers.IConverterObserver"/> to receive notifications on converter events.
            </summary>
            <param name="observer">The observer to be registered.</param>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FileResource">
            <summary>
            Class which represents a file as a resource.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FileResource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FileResource"/> class.
            </summary>
            <param name="path">path to file.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FileResource.FullName">
            <summary>
            Gets the resource path.
            </summary>
            <value>
            The full path to the resource on disk.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FileResource.OpenStreamAsync">
            <summary>
            Open a stream to the resource.
            </summary>
            <returns>Stream for accesssing the content of the resource.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider">
            <summary>
            Class which gives ResourceExplorer access to resources which are stored in file system.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.#ctor(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider"/> class.
            </summary>
            <param name="resourceExplorer">resourceExplorer.</param>
            <param name="folder">Folder.</param>
            <param name="includeSubFolders">Should include sub folders.</param>
            <param name="monitorChanges">Should monitor changes.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.Directory">
            <summary>
            Gets or sets folder to enumerate.
            </summary>
            <value>
            folder to enumerate.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.IncludeSubFolders">
            <summary>
            Gets or sets a value indicating whether to include subfolders.
            </summary>
            <value>
            A value indicating whether to include subfolders.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.Refresh">
            <summary>
            Refresh any cached content and look for new content.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.TryGetResource(System.String,Microsoft.Bot.Builder.Dialogs.Declarative.Resources.Resource@)">
            <summary>
            GetResource by id.
            </summary>
            <param name="id">Resource ID.</param>
            <param name="resource">the found resource.</param>
            <returns>true if resource was found.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.GetResources(System.String)">
            <summary>
            Get Resources by extension.
            </summary>
            <param name="extension">Resource extension.</param>
            <returns>Collection of resources.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProviderExtensions">
            <summary>
            Folder/FileResources.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProviderExtensions.AddFolder(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer,System.String,System.Boolean,System.Boolean)">
            <summary>
            Add a folder resource.
            </summary>
            <param name="explorer">The <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer"/> for this extension method.</param>
            <param name="folder">Folder to include as a resource.</param>
            <param name="includeSubFolders">Whether to include subfolders.</param>
            <param name="monitorChanges">Whether to track changes.</param>
            <returns>The resource explorer.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProviderExtensions.AddFolders(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer,System.String,System.String[],System.Boolean)">
            <summary>
             Add folder resources.
            </summary>
            <param name="explorer">The <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer"/> for this extension method.</param>
            <param name="folder">Collection of folders to include as resources.</param>
            <param name="ignoreFolders">Immediate sub-folders to ignore.</param>
            <param name="monitorChanges">Whether to track changes.</param>
            <returns>The resource explorer.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProviderExtensions.LoadProject(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer,System.String,System.String[],System.Boolean)">
            <summary>
            Add a .csproj as resource (adding the project, referenced projects and referenced packages).
            </summary>
            <param name="resourceExplorer">resource explorer.</param>
            <param name="projectFile">Project file.</param>
            <param name="ignoreFolders">Folders to ignore.</param>
            <param name="monitorChanges">Whether to track changes.</param>
            <returns>A new <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer"/>.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.Resource">
            <summary>
            Interface for access the content of a resource.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.Resource.Id">
            <summary>
            Gets or sets resource id.
            </summary>
            <value>
            Resource id.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.Resource.OpenStreamAsync">
            <summary>
            Get readonly stream. 
            </summary>
            <returns>The resource as a stream.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.Resource.ReadTextAsync">
            <summary>
            Get resource as text async.
            </summary>
            <returns>The resource as text.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer">
            <summary>
            Class which gives standard access to content resources.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer"/> class.
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.Changed">
            <summary>
            Event which fires when a resource is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.ResourceProviders">
            <summary>
            Gets the resource providers.
            </summary>
            <value>
            The resource providers.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.ResourceTypes">
            <summary>
            Gets the resource type id extensions that you want to manage.
            </summary>
            <value>
            The extensions that you want the to manage.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.AddResourceType(System.String)">
            <summary>
            Add a resource Type to resource list.
            </summary>
            <param name="type">resource type.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.Refresh">
            <summary>
            Reload any cached data.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.AddResourceProvider(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceProvider)">
            <summary>
            Add a resource provider to the resources managed by the resource explorer.
            </summary>
            <param name="resourceProvider">resource provider.</param>
            <returns>resource explorer so that you can fluently call multiple methods on the resource explorer.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.LoadType``1(System.String)">
            <summary>
            Create Type from resource.
            </summary>
            <typeparam name="T">type to create.</typeparam>
            <param name="resourceId">resourceId to bind to.</param>
            <returns>created type.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.LoadType``1(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.Resource)">
            <summary>
            Create Type from resource.
            </summary>
            <typeparam name="T">type to create.</typeparam>
            <param name="resource">resource to bind to.</param>
            <returns>created type.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.LoadTypeAsync``1(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.Resource,System.Threading.CancellationToken)">
            <summary>
            Create Type from resource.
            </summary>
            <typeparam name="T">type to create.</typeparam>
            <param name="resource">resource to bind to.</param>
            <param name="cancellationToken">the <see cref="T:System.Threading.CancellationToken"/> for the task.</param>
            <returns>task which will resolve to created type.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.GetResources(System.String)">
            <summary>
            Get resources of a given type.
            </summary>
            <param name="fileExtension">File extension filter.</param>
            <returns>The resources.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.GetResource(System.String)">
            <summary>
            Get resource by id.
            </summary>
            <param name="id">The resource id.</param>
            <returns>The resource, or throws if not found.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.TryGetResource(System.String,Microsoft.Bot.Builder.Dialogs.Declarative.Resources.Resource@)">
            <summary>
            Try to get the resource by id.
            </summary>
            <param name="id">The id.</param>
            <param name="resource">resource that was found or null.</param>
            <returns>true if found.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.RegisterType``1(System.String,Microsoft.Bot.Builder.Dialogs.Declarative.Loaders.ICustomDeserializer)">
            <summary>
            Register a declarative type with the resource loader system.
            </summary>
            <typeparam name="T">type of object to create.</typeparam>
            <param name="kind">the $kind name to map to this type.</param>
            <param name="loader">optional custom deserializer.</param>
            <returns>Resource explorer for fluent style multiple calls.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.RegisterType(System.String,System.Type,Microsoft.Bot.Builder.Dialogs.Declarative.Loaders.ICustomDeserializer)">
            <summary>
            Register a declarative type with the resource loader system.
            </summary>
            <param name="kind">the $kind name to map to this type.</param>
            <param name="type">type of object to create.</param>
            <param name="loader">optional custom deserializer.</param>
            <returns>Resource explorer for fluent style multiple calls.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.BuildType``1(System.String,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Build type for given $kind using the JToken/serializer as the source.
            </summary>
            <typeparam name="T">type of object to create.</typeparam>
            <param name="kind">$kind.</param>
            <param name="obj">source object.</param>
            <param name="serializer">serializer to user.</param>
            <returns>instantiated object of type(T).</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.GetTypeForKind(System.String)">
            <summary>
            Get the type for $kind.
            </summary>
            <param name="kind">$kind.</param>
            <returns>type of object.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.GetKindsForType(System.Type)">
            <summary>
            Get the $kind for a type.
            </summary>
            <param name="type">type.</param>
            <returns>$kind for the type.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.GetKindsForType``1">
            <summary>
            Get the $kind for a type.
            </summary>
            <typeparam name="T">type.</typeparam>
            <returns>$kind for the type.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.Dispose">
            <summary>
            Dispose of internal resources.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.IsRef(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Determine if token is a reference.
            </summary>
            <param name="token">jtoken.</param>
            <returns>true if it is string ref.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.ResolveRefAsync(Newtonsoft.Json.Linq.JToken,Microsoft.Bot.Builder.Dialogs.Debugging.SourceContext,System.Threading.CancellationToken)">
            <summary>
            Resolves a ref to the actual object.
            </summary>
            <param name="refToken">reference.</param>
            <param name="sourceContext">source context to build debugger source map.</param>
            <param name="cancellationToken">the <see cref="T:System.Threading.CancellationToken"/> for the task.</param>
            <returns>resolved object the reference refers to.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.RegisterComponentTypes">
            <summary>
            Register all types from components.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceProvider">
            <summary>
            Interface for looking up a resource by id.
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceProvider.Changed">
            <summary>
            Event which is fired if any resource managed by the resource provider detects changes to the underlining resource.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceProvider.ResourceExplorer">
            <summary>
            Gets the  resource Explorer.
            </summary>
            <value>
            Resource Explorer.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceProvider.Id">
            <summary>
            Gets or sets id for the resource provider.
            </summary>
            <value>
            id for the resource provider.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceProvider.TryGetResource(System.String,Microsoft.Bot.Builder.Dialogs.Declarative.Resources.Resource@)">
            <summary>
            Get resource by id.
            </summary>
            <param name="id">Resource id.</param>
            <param name="resource">resource.</param>
            <returns>true if resource is found.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceProvider.GetResources(System.String)">
            <summary>
            enumerate resources.
            </summary>
            <param name="extension">Extension filter.</param>
            <returns>The resources.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceProvider.Refresh">
            <summary>
            Refresh any cached resources.
            </summary>
        </member>
    </members>
</doc>
